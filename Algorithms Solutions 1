using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections;
using System.ComponentModel;
using System.Diagnostics.CodeAnalysis;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.Serialization;
using System.Text.RegularExpressions;
using System.Text;
using System;

class Solution {

    // Complete the sockMerchant function below.
    static int sockMerchant(int n, int[] ar) {
     int individualPair = 0;
     int generalPair = 0;
     List<int> treatedNumbers = new List<int>();
     int count = 0;
     for (int i = 0; i < n; i++){
         count = 0;
         individualPair = 0;
         if(!treatedNumbers.Contains(ar[i])){
             for (int j = n-1 ; j > i; j-- ){
             if(i != j){
             if(ar[i] == ar[j]){
              count +=1;
             if ( count % 2 != 0){
            individualPair +=1 ;
            treatedNumbers.Add(ar[i]);
                }
            } 
        }
        
    }
        generalPair += individualPair; 
         
         }

      
     }
     return generalPair;

    }

    static void Main(string[] args) {
        TextWriter textWriter = new StreamWriter(@System.Environment.GetEnvironmentVariable("OUTPUT_PATH"), true);

        int n = Convert.ToInt32(Console.ReadLine());

        int[] ar = Array.ConvertAll(Console.ReadLine().Split(' '), arTemp => Convert.ToInt32(arTemp))
        ;
        int result = sockMerchant(n, ar);

        textWriter.WriteLine(result);

        textWriter.Flush();
        textWriter.Close();
    }
}
